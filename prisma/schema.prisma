// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth.js Models
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  // Custom fields for P&W integration
  pnwApiKey     String?   @unique
  nationId      Int?      @unique
  nation        Nation?   @relation(fields: [nationId], references: [id])

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Politics and War Models
model Nation {
  id                Int       @id
  nationName        String
  leaderName        String
  continent         String?
  warPolicy         String?
  domesticPolicy    String?
  color             String?
  allianceId        Int?
  alliancePosition  String?
  cities            Int       @default(0)
  score             Float     @default(0)
  soldiers          Int       @default(0)
  tanks             Int       @default(0)
  aircraft          Int       @default(0)
  ships             Int       @default(0)
  missiles          Int       @default(0)
  nukes             Int       @default(0)
  vmode             Boolean   @default(false)

  alliance          Alliance? @relation(fields: [allianceId], references: [id])
  user              User?

  lastUpdated       DateTime  @default(now())

  @@index([allianceId])
}

model Alliance {
  id                Int       @id
  name              String
  acronym           String?
  score             Float     @default(0)
  color             String?
  dateCreated       DateTime?

  nations           Nation[]

  lastUpdated       DateTime  @default(now())
}
